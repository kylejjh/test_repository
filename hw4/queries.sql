-- 1. Total number of orders completed on 18th March 2023
SELECT COUNT(DISTINCT order_id) AS total_orders
FROM SALES
WHERE Date = '2023-03-18';

-- 2. Total number of orders completed on 18th March 2023 with first name 'John' and last name 'Doe'
SELECT COUNT(DISTINCT s.order_id) AS total_orders_john_doe
FROM SALES s
JOIN CUSTOMERS c ON s.customer_id = c.customer_id
WHERE s.Date = '2023-03-18'
  AND c.first_name = 'John'
  AND c.last_name = 'Doe';

-- 3. Total number of customers that purchased in January 2023 and average amount spent per customer
SELECT COUNT(DISTINCT customer_id) AS total_customers,
       AVG(customer_spend) AS avg_spent_per_customer
FROM (
    SELECT customer_id, SUM(revenue) AS customer_spend
    FROM SALES
    WHERE Date BETWEEN '2023-01-01' AND '2023-01-31'
    GROUP BY customer_id
) AS customer_totals;

-- 4. Departments that generated less than $600 in 2022
SELECT i.department, SUM(s.revenue) AS total_revenue
FROM SALES s
JOIN ITEMS i ON s.item_id = i.item_id
WHERE s.Date BETWEEN '2022-01-01' AND '2022-12-31'
GROUP BY i.department
HAVING SUM(s.revenue) < 600;

-- 5. Most and least revenue we have generated by an order
SELECT MAX(order_total) AS most_revenue,
       MIN(order_total) AS least_revenue
FROM (
    SELECT order_id, SUM(revenue) AS order_total
    FROM SALES
    GROUP BY order_id
) AS order_totals;

-- 6. Orders in the most lucrative order
WITH order_revenue AS (
    SELECT order_id, SUM(revenue) AS total_revenue
    FROM SALES
    GROUP BY order_id
)
SELECT s.*
FROM SALES s
JOIN order_revenue o ON s.order_id = o.order_id
WHERE o.total_revenue = (
    SELECT MAX(total_revenue) FROM order_revenue
);